{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["notesWithRelativeMinors","majorKeyCircle","Object","keys","minorKeyCircle","values","inversion","App","useState","chord","setChord","majorChords","map","majorNote","minorChords","minorNote","createChordList","chordlist","onClick","chordList","Math","floor","random","length","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAEMA,EAA0B,CAC9B,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,UACL,EAAK,UACL,EAAK,UACL,UAAM,UACN,UAAM,UACN,UAAM,IACN,UAAM,IACN,UAAM,IACN,EAAK,KAEDC,EAAiBC,OAAOC,KAAKH,GAC7BI,EAAiBF,OAAOG,OAAOL,GAK/BM,EAAY,CAAC,gBAAiB,gBAAiB,iBAqCtCC,MAtBf,WAAgB,IAAD,EACaC,mBAAS,QADtB,mBACNC,EADM,KACCC,EADD,OAEqBF,mBAfZ,WACtB,IAAMG,EAAcV,EAAeW,KAAI,SAACC,GACtC,MAAM,GAAN,OAAUA,EAAV,UAEIC,EAAcV,EAAeQ,KAAI,SAACG,GACtC,MAAM,GAAN,OAAUA,EAAV,QAEF,MAAM,GAAN,mBAAWJ,GAAX,YAA2BG,IAQgBE,IAF9B,mBAENC,EAFM,KAIPC,GAJO,KAIG,WARI,IAACC,EASnBT,GATmBS,EASIF,GARfG,KAAKC,MAAMD,KAAKE,SAAWH,EAAUI,YAU/C,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,mDAEF,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBf,IACvB,mBAAGe,UAAU,YAAb,SAA0BlB,EAAUc,KAAKC,MAAMD,KAAKE,SAAUhB,EAAUiB,WACxE,wBAAQC,UAAU,WAAWN,QAAS,kBAAMA,KAA5C,8BCxCOO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.22074409.chunk.js","sourcesContent":["import { useState } from 'react'\nimport './App.css';\nconst notesWithRelativeMinors = {\n  'C': 'A',\n  'G': 'E',\n  'D': 'B',\n  'A': 'F♯',\n  'E': 'C♯',\n  'B': 'G♯',\n  'G♭': 'E♭',\n  'D♭': 'B♭',\n  'A♭': 'F',\n  'E♭': 'C',\n  'B♭': 'G',\n  'F': 'D',\n}\nconst majorKeyCircle = Object.keys(notesWithRelativeMinors)\nconst minorKeyCircle = Object.values(notesWithRelativeMinors)\n\nconst noteQuality = ['♭', '♯']\nconst chordType = ['m', 'maj']\nconst extensions = ['7', '9']\nconst inversion = ['1st inversion', 'root position', '2nd inversion']\n\nconst createChordList = () => {\n  const majorChords = majorKeyCircle.map((majorNote) => {\n    return `${majorNote}maj`\n  })\n  const minorChords = minorKeyCircle.map((minorNote) => {\n    return `${minorNote}m`\n  })\n  return [...majorChords, ...minorChords]\n}\nconst generateChord = (chordList) => \n  chordList[Math.floor(Math.random() * chordList.length)];\n  \n\nfunction App() {\n  const [chord, setChord] = useState('Cmaj')\n  const [chordlist, setChordList] = useState(createChordList())\n\n  const onClick = () => {\n    setChord(generateChord(chordlist))\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"navbar\">\n        <h1>Chord generator</h1>\n      </div>\n      <div className=\"container\">\n        <h2 className=\"chord\">{chord}</h2>\n        <p className=\"inversion\">{inversion[Math.floor(Math.random()* inversion.length)]}</p>\n        <button className=\"generate\" onClick={() => onClick()}>New chord</button>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}